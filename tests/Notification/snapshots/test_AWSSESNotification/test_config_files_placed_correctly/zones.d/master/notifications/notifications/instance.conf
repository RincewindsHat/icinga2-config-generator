/*
 *  Icinga2 configuration generator
 *
 *  Icinga2 configuration file generator for hosts, commands, checks, ... in python
 *
 *  Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org> https://icinga2.confgen.org
 *
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 *  For all license terms see README.md and LICENSE Files in root directory of this Project.
 */



/************************************************************************************************
 *                                                                                              *
 *                                            ! ! !                                             *
 *                                       IMPORTANT NOTICE                                       *
 *                                            ! ! !                                             *
 *                                                                                              *
 *                                                                                              *
 *                                    DO NOT EDIT THIS FILE!                                    *
 *           This file is automatically generated with icinga2confgen python library.           *
 *                                                                                              *
 *                                                                                              *
 *                 Copyright (c) 2020 Fabian Fröhlich <mail@icinga2.confgen.org>                *
 *                                 https://icinga2.confgen.org                                  *
 *                                                                                              *
 ************************************************************************************************/



template Notification "notification_template_host_instance" {
interval = 1h
command = "command_host_aws_ses"
types += [
"DowntimeStart",
"DowntimeEnd",
"DowntimeRemoved",
"Custom",
"Acknowledgement",
"Problem",
"Recovery",
"FlappingStart",
"FlappingEnd",
]
states += [
"Up",
"Down",
]
}
template Notification "notification_template_service_instance" {
interval = 1h
command = "command_service_aws_ses"
types += [
"DowntimeStart",
"DowntimeEnd",
"DowntimeRemoved",
"Custom",
"Acknowledgement",
"Problem",
"Recovery",
"FlappingStart",
"FlappingEnd",
]
states += [
"Warning",
"Critical",
"Unknown",
"OK",
]
}
apply Notification "host_notification_instance_user_BaseTestUser_0" to Host {
import "notification_template_host_instance"
users += [
"user_BaseTestUser",
]
vars.notification_aws_ses_recipients += [
"user1@mail1",
"user1@mail2",
]

vars.notification_aws_ses_key_id = "KEY_ID"

vars.notification_aws_ses_secret = "SECRET"

vars.notification_aws_ses_sender = "SENDER"





assign where "notification_instance" in host.vars.notification
}
apply Notification "service_notification_instance_user_BaseTestUser_0" to Service {
import "notification_template_service_instance"
users += [
"user_BaseTestUser",
]
vars.notification_aws_ses_recipients += [
"user1@mail1",
"user1@mail2",
]

vars.notification_aws_ses_key_id = "KEY_ID"

vars.notification_aws_ses_secret = "SECRET"

vars.notification_aws_ses_sender = "SENDER"





assign where "notification_instance" in service.vars.notification
}
apply Notification "host_notification_instance_group_BaseTestUserGroup_0" to Host {
import "notification_template_host_instance"
users += [
"user_group_notification_sender_BaseTestUserGroup",
]
vars.notification_aws_ses_recipients += [
"group1@mail1",
"group1@mail2",
]

vars.notification_aws_ses_key_id = "KEY_ID"

vars.notification_aws_ses_secret = "SECRET"

vars.notification_aws_ses_sender = "SENDER"





assign where "notification_instance" in host.vars.notification
}
apply Notification "service_notification_instance_group_BaseTestUserGroup_0" to Service {
import "notification_template_service_instance"
users += [
"user_group_notification_sender_BaseTestUserGroup",
]
vars.notification_aws_ses_recipients += [
"group1@mail1",
"group1@mail2",
]

vars.notification_aws_ses_key_id = "KEY_ID"

vars.notification_aws_ses_secret = "SECRET"

vars.notification_aws_ses_sender = "SENDER"





assign where "notification_instance" in service.vars.notification
}
