object CheckCommand "command_instance_local_negate" {
  vars.realcmd = [ "$monitoring_plugin_dir$" + "/check_sshd_security.py"]
  vars.realargs = {
    "-r" = {
      value = "$command_sshd_security_permit_root_login$"
      set_if = {{ macro("$command_sshd_security_permit_root_login$") != false }}
    }
    "-k" = {
      value = "$command_sshd_security_public_key_auth$"
      set_if = {{ macro("$command_sshd_security_public_key_auth$") != false }}
    }
    "-P" = {
      value = "$command_sshd_security_password_auth$"
      set_if = {{ macro("$command_sshd_security_password_auth$") != false }}
    }
    "--permit-empty-passwords" = {
      value = "$command_sshd_security_permit_empty_passwords$"
      set_if = {{ macro("$command_sshd_security_permit_empty_passwords$") != false }}
    }
    "--fingerprint-hash" = {
      value = "$command_sshd_security_fingerprint_hash$"
      set_if = {{ macro("$command_sshd_security_fingerprint_hash$") != false }}
    }
    "--port" = {
      value = "$command_sshd_security_port$"
      set_if = {{ macro("$command_sshd_security_port$") != false }}
    }
    "--challenge-response-authentication" = {
      value = "$command_sshd_security_challenge_response_authentication$"
      set_if = {{ macro("$command_sshd_security_challenge_response_authentication$") != false }}
    }
    "--config" = {
      value = "$command_sshd_security_config$"
      set_if = {{ macro("$command_sshd_security_config$") != false }}
      repeat_key = true
    }
  }

  arguments = {
  "-t" = {
    value = "$negation_timeout$"
    set_if = {{ macro("$negation_timeout$") != false }}
  }
  "-o" = {
    value = "$negation_ok_status$"
    set_if = {{ macro("$negation_ok_status$") != false }}
  }
  "-w" = {
    value = "$negation_warning_status$"
    set_if = {{ macro("$negation_warning_status$") != false }}
  }
  "-c" = {
    value = "$negation_critical_status$"
    set_if = {{ macro("$negation_critical_status$") != false }}
  }
  "-u" = {
    value = "$negation_unknown_status$"
    set_if = {{ macro("$negation_unknown_status$") != false }}
  }
  "-s" = {
    set_if = {{ macro("$negation_substitute$") != false && "$negation_substitute$" }}
  }
  "--command" = {
    value = {{
      var command = macro("$realcmd$")
      var arguments = macro("$realargs$")
      if (typeof(command) == String && !arguments) {
        return command
      }
      var escaped_args = []
      for (arg in resolve_arguments(command, arguments)) {
          escaped_args.add(arg.replace(" ", "\\"))
      }
      return escaped_args.join(" ")
    }}
    skip_key = true
    required = true
    order = 99
  }
}

  command = ["$nagios_plugin_dir$" + "/negate"]
}
